)
set.seed(3333)
resist_df1t3 <- data.frame(
resist_bottle = as.factor(rep(1:9, each=3)),
coat_thickness = rnorm(n = 27, mean = 10, sd = 2),
raw_material_A_lot = as.ordered(rep(1)),
raw_material_B_lot = as.ordered(rep(1))
)
set.seed(3333)
resist_df1t3 <- data.frame(
resist_bottle = as.factor(rep(1:9, each=3)),
coat_thickness = rnorm(n = 27, mean = 10, sd = 2),
raw_material_A_lot = as.ordered(rep(1)),
raw_material_B_lot = as.ordered(rep(1)),
date_run = sample(seq(as.Date('2019/01/01'), as.Date('2019/01/10'), by="day"),27 )
)
set.seed(3333)
resist_df1t3 <- data.frame(
resist_bottle = as.factor(rep(1:9, each=3)),
coat_thickness = rnorm(n = 27, mean = 10, sd = 2),
raw_material_A_lot = as.ordered(rep(1)),
raw_material_B_lot = as.ordered(rep(1)),
)
set.seed(3333)
resist_df1t3 <- data.frame(
resist_bottle = as.factor(rep(1:9, each=3)),
coat_thickness = rnorm(n = 27, mean = 10, sd = 2),
raw_material_A_lot = as.ordered(rep(1)),
raw_material_B_lot = as.ordered(rep(1)),
)
date
set.seed(3333)
resist_df1t3 <- data.frame(
resist_bottle = as.factor(rep(1:9, each=3)),
coat_thickness = rnorm(n = 27, mean = 10, sd = 2),
raw_material_A_lot = as.ordered(rep(1)),
raw_material_B_lot = as.ordered(rep(1))
)
date_run = sample(rep(seq(as.Date('2019/01/11'), as.Date('2019/01/20'), by="day")))
print(date_run)
resist_df2 <- data.frame(
resist_bottle = as.factor(rep(1:50, each=3)),
coat_thickness = rnorm(n = 3*50, mean = 11, sd = 4),
raw_material_A_lot = as.ordered(rep(2)),
raw_material_B_lot = as.ordered(rep(1)),
date_run = sample(rep(seq(as.Date('2019/01/11'), as.Date('2019/01/20'), by="day")))
print(date_run)
)
head(df2)
resist_df2 <- data.frame(
resist_bottle = as.factor(rep(1:50, each=3)),
coat_thickness = rnorm(n = 3*50, mean = 11, sd = 4),
raw_material_A_lot = as.ordered(rep(2)),
raw_material_B_lot = as.ordered(rep(1)),
date_run = sample(rep(seq(as.Date('2019/01/11'), as.Date('2019/01/20'), by="day")))
print(date_run)
)
head(resist_df2)
resist_df2 <- data.frame(
resist_bottle = as.factor(rep(1:50, each=3)),
coat_thickness = rnorm(n = 3*50, mean = 11, sd = 4),
raw_material_A_lot = as.ordered(rep(2)),
raw_material_B_lot = as.ordered(rep(1)),
date_run = sample(rep(seq(as.Date('2019/01/11'), as.Date('2019/01/20'), by="day")))
print(date_run)
)
resist_df2 <- data.frame(
resist_bottle = as.factor(rep(1:50, each=3)),
coat_thickness = rnorm(n = 3*50, mean = 11, sd = 4),
raw_material_A_lot = as.ordered(rep(2)),
raw_material_B_lot = as.ordered(rep(1)),
date_run = sample(rep(seq(as.Date('2019/01/11'), as.Date('2019/01/20'), by="day")))
)
head(resist_df2)
library(ggplot2)
resist_df1 <- data.frame(
resist_bottle = as.factor(rep(1:9, each=3)),
coat_thickness = rnorm(n = 3*9, mean = 110, sd = 4),
raw_material_A_lot = as.ordered(rep(2)),
raw_material_B_lot = as.ordered(rep(1)),
date_run = sample(rep(seq(as.Date('2019/01/01'), as.Date('2019/01/10'), by="day")))
)
resist_df2 <- data.frame(
resist_bottle = as.factor(rep(1:50, each=3)),
coat_thickness = rnorm(n = 3*50, mean = 11, sd = 4),
raw_material_A_lot = as.ordered(rep(2)),
raw_material_B_lot = as.ordered(rep(1)),
date_run = sample(rep(seq(as.Date('2019/01/11'), as.Date('2019/01/20'), by="day")))
)
head(resist_df2)
---
title: "ggqc_test"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggQC)
```
I am going to test out the ggQC package in this project. I am new to R, and although I have made too many process QC visualizations, yet I have not used R for buliding a single one! In case you are wondering, my go to platform at work used to be JMP/JSL, but I am unemployed now, and do not want to spend the $$$ for purchasing a JMP license - thankfully R is free and this way I get to learn something new, its a WIN-WIN!
I am going to use the demo [HERE](https://cran.r-project.org/web/packages/ggQC/vignettes/XbarR_HOTTO.html) as a guide.
First step is to create a dataset. Below code will simulate production line data from a photresist (a chemical, usually liquid, used for manufacturing computer chips) manufacturing plant. The manufacturing process is a 'batch process' where each batch produces 100 bottles of resist. After packaging, 3+3+3 bottles are pulled from begining, middle and end of the fill process and sent to internal QC. One of the QC check is to measure resist coat thickness after spin coating dummy silicon wafers. In reality, many variables (temperature, humidity, time elapsed between various process steps, operator, container/reactor and so on) can affect the end result.
In below example - to keep things simple -  we will only be looking at the variability as a function of varying raw material lot.
```{r}
library(ggplot2)
resist_df1 <- data.frame(
resist_bottle = as.factor(rep(1:9, each=3)),
coat_thickness = rnorm(n = 3*9, mean = 10, sd = 2),
raw_material_A_lot = as.ordered(rep(2)),
raw_material_B_lot = as.ordered(rep(1)),
date_run = sample(rep(seq(as.Date('2019/01/01'), as.Date('2019/01/10'), by="day")))
)
resist_df2 <- data.frame(
resist_bottle = as.factor(rep(1:9, each=3)),
coat_thickness = rnorm(n = 3*9, mean = 11, sd = 4),
raw_material_A_lot = as.ordered(rep(2)),
raw_material_B_lot = as.ordered(rep(1)),
date_run = sample(rep(seq(as.Date('2019/01/11'), as.Date('2019/01/20'), by="day")))
)
resist_df3 <- data.frame(
resist_bottle = as.factor(rep(1:9, each=3)),
coat_thickness = rnorm(n = 3*9, mean = 10.5, sd = 1.6),
raw_material_A_lot = as.ordered(rep(3)),
raw_material_B_lot = as.ordered(rep(2)),
date_run = sample(seq(as.Date('2019/01/21'), as.Date('2019/01/30'), by="day"), 50)
)
resist_df <- rbind(resist_df1t3, resist_df2, resist_df3)
head(resist_df)
```
Okay, now its time to try out the ggQC package.
First, I am going to make the control charts for the resist coat thickness.
```{r}
XbarR <- ggplot(resist_df, aes(x = date_run, y = coat_thickness, group = 1)) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line") +
stat_QC()
XbarR
XbarR + stat_QC_labels()
```
The chart looks nice. But I would like to add spec limits to it. I occassionally find it useful to have spec limits available in visualization for XbarR charts because:
*For a production process, the capability has already been established.
*Having spec limits on the chart help in getting a quick estimate of product disposition for out of control points
*Process may be stable and in control, but off target. Mean may shift over time.
```{r}
```
The batch that has been
```{r}
library(ggplot2)
resist_df1 <- data.frame(
resist_bottle = as.factor(rep(1:9, each=3)),
coat_thickness = rnorm(n = 3*9, mean = 10, sd = 2),
raw_material_A_lot = as.ordered(rep(2)),
raw_material_B_lot = as.ordered(rep(1)),
date_run = sample(rep(seq(as.Date('2019/01/01'), as.Date('2019/01/10'), by="day")))
)
resist_df2 <- data.frame(
resist_bottle = as.factor(rep(1:9, each=3)),
coat_thickness = rnorm(n = 3*9, mean = 11, sd = 4),
raw_material_A_lot = as.ordered(rep(2)),
raw_material_B_lot = as.ordered(rep(1)),
date_run = sample(rep(seq(as.Date('2019/01/11'), as.Date('2019/01/20'), by="day")))
)
resist_df3 <- data.frame(
resist_bottle = as.factor(rep(1:9, each=3)),
coat_thickness = rnorm(n = 3*9, mean = 10.5, sd = 1.6),
raw_material_A_lot = as.ordered(rep(3)),
raw_material_B_lot = as.ordered(rep(2)),
date_run = sample(seq(as.Date('2019/01/21'), as.Date('2019/01/30'), by="day"), 50)
)
resist_df <- rbind(resist_df1t3, resist_df2, resist_df3)
head(resist_df)
```
resist_df <- rbind(resist_df1, resist_df2, resist_df3)
head(resist_df)
```{r}
library(ggplot2)
resist_df1 <- data.frame(
resist_bottle = as.factor(rep(1:9, each=3)),
coat_thickness = rnorm(n = 3*9, mean = 10, sd = 2),
raw_material_A_lot = as.ordered(rep(2)),
raw_material_B_lot = as.ordered(rep(1)),
date_run = sample(rep(seq(as.Date('2019/01/01'), as.Date('2019/01/10'), by="day")))
)
resist_df2 <- data.frame(
resist_bottle = as.factor(rep(1:9, each=3)),
coat_thickness = rnorm(n = 3*9, mean = 11, sd = 4),
raw_material_A_lot = as.ordered(rep(2)),
raw_material_B_lot = as.ordered(rep(1)),
date_run = sample(rep(seq(as.Date('2019/01/11'), as.Date('2019/01/20'), by="day")))
)
resist_df3 <- data.frame(
resist_bottle = as.factor(rep(1:9, each=3)),
coat_thickness = rnorm(n = 3*9, mean = 10.5, sd = 1.6),
raw_material_A_lot = as.ordered(rep(3)),
raw_material_B_lot = as.ordered(rep(2)),
date_run = samplerep((seq(as.Date('2019/01/21'), as.Date('2019/01/30'), by="day")))
)
resist_df <- rbind(resist_df1, resist_df2, resist_df3)
head(resist_df)
```
resist_df3 <- data.frame(
resist_bottle = as.factor(rep(1:9, each=3)),
coat_thickness = rnorm(n = 3*9, mean = 10.5, sd = 1.6),
raw_material_A_lot = as.ordered(rep(3)),
raw_material_B_lot = as.ordered(rep(2)),
date_run = sample(rep(seq(as.Date('2019/01/21'), as.Date('2019/01/30'), by="day")))
)
resist_df <- rbind(resist_df1, resist_df2, resist_df3)
head(resist_df)
```{r}
library(ggplot2)
resist_df1 <- data.frame(
resist_bottle = as.factor(rep(1:9, each=3)),
coat_thickness = rnorm(n = 3*9, mean = 10, sd = 2),
raw_material_A_lot = as.ordered(rep(2)),
raw_material_B_lot = as.ordered(rep(1)),
date_run = sample(rep(seq(as.Date('2019/01/01'), as.Date('2019/01/10'), by="day")))
)
resist_df2 <- data.frame(
resist_bottle = as.factor(rep(1:9, each=3)),
coat_thickness = rnorm(n = 3*9, mean = 11, sd = 4),
raw_material_A_lot = as.ordered(rep(2)),
raw_material_B_lot = as.ordered(rep(1)),
date_run = sample(rep(seq(as.Date('2019/01/11'), as.Date('2019/01/20'), by="day")))
)
library(ggplot2)
resist_df1 <- data.frame(
resist_bottle = as.factor(rep(1:9, each=3)),
coat_thickness = rnorm(n = 3*9, mean = 10, sd = 2),
raw_material_A_lot = as.ordered(rep(2)),
raw_material_B_lot = as.ordered(rep(1)),
date_run = sample(rep(seq(as.Date('2019/01/01'), as.Date('2019/01/10'), by="day")))
)
library(ggplot2)
resist_df1 <- data.frame(
resist_bottle = as.factor(rep(1:9, each=3)),
coat_thickness = rnorm(n = 3*9, mean = 10, sd = 2),
raw_material_A_lot = as.ordered(rep(2)),
raw_material_B_lot = as.ordered(rep(1)),
date_run = sample(rep(seq(as.Date('2019/01/01'), as.Date('2019/01/09'), by="day")))
)
resist_df1 <- data.frame(
resist_bottle = as.factor(rep(1:9, each=3)),
coat_thickness = rnorm(n = 3*9, mean = 10, sd = 2),
raw_material_A_lot = as.ordered(rep(2)),
raw_material_B_lot = as.ordered(rep(1)),
date_run = sample(rep(seq(as.Date('2019/01/01'), as.Date('2019/01/09'), by="day")))
)
head(df1)
resist_df1 <- data.frame(
resist_bottle = as.factor(rep(1:9, each=3)),
coat_thickness = rnorm(n = 3*9, mean = 10, sd = 2),
raw_material_A_lot = as.ordered(rep(2)),
raw_material_B_lot = as.ordered(rep(1)),
date_run = sample(rep(seq(as.Date('2019/01/01'), as.Date('2019/01/09'), by="day")))
)
head(resist_df1)
library(ggplot2)
resist_df1 <- data.frame(
resist_bottle = as.factor(rep(1:9, each=3)),
coat_thickness = rnorm(n = 3*9, mean = 10, sd = 2),
raw_material_A_lot = as.ordered(rep(2)),
raw_material_B_lot = as.ordered(rep(1)),
date_run = sample(rep(seq(as.Date('2019/01/01'), as.Date('2019/01/09'), by="day")))
)
head(resist_df1)
resist_df2 <- data.frame(
resist_bottle = as.factor(rep(1:9, each=3)),
coat_thickness = rnorm(n = 3*9, mean = 11, sd = 4),
raw_material_A_lot = as.ordered(rep(2)),
raw_material_B_lot = as.ordered(rep(1)),
date_run = sample(rep(seq(as.Date('2019/01/11'), as.Date('2019/01/19'), by="day")))
)
resist_df3 <- data.frame(
resist_bottle = as.factor(rep(1:9, each=3)),
coat_thickness = rnorm(n = 3*9, mean = 10.5, sd = 1.6),
raw_material_A_lot = as.ordered(rep(3)),
raw_material_B_lot = as.ordered(rep(2)),
date_run = sample(rep(seq(as.Date('2019/01/21'), as.Date('2019/01/29'), by="day")))
)
resist_df <- rbind(resist_df1, resist_df2, resist_df3)
head(resist_df)
XbarR <- ggplot(resist_df, aes(x = date_run, y = coat_thickness, group = 1)) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line") +
stat_QC()
XbarR
XbarR + stat_QC_labels()
```{r}
library(ggplot2)
set.seed(5555)
resist_df1 <- data.frame(
resist_bottle = as.factor(rep(1:9, each=3)),
coat_thickness = rnorm(n = 3*9, mean = 10, sd = 2),
raw_material_A_lot = as.ordered(rep(2)),
raw_material_B_lot = as.ordered(rep(1)),
date_run = sample(rep(seq(as.Date('2019/01/01'), as.Date('2019/01/09'), by="day")))
)
head(resist_df1)
resist_df2 <- data.frame(
resist_bottle = as.factor(rep(1:9, each=3)),
coat_thickness = rnorm(n = 3*9, mean = 11, sd = 4),
raw_material_A_lot = as.ordered(rep(2)),
raw_material_B_lot = as.ordered(rep(1)),
date_run = sample(rep(seq(as.Date('2019/01/11'), as.Date('2019/01/19'), by="day")))
)
resist_df3 <- data.frame(
resist_bottle = as.factor(rep(1:9, each=3)),
coat_thickness = rnorm(n = 3*9, mean = 10.5, sd = 1.6),
raw_material_A_lot = as.ordered(rep(3)),
raw_material_B_lot = as.ordered(rep(2)),
date_run = sample(rep(seq(as.Date('2019/01/21'), as.Date('2019/01/29'), by="day")))
)
resist_df <- rbind(resist_df1, resist_df2, resist_df3)
head(resist_df)
```{r}
XbarR <- ggplot(resist_df, aes(x = date_run, y = coat_thickness, group = 1)) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line") +
stat_QC()
XbarR
XbarR + stat_QC_labels()
```
library(ggplot2)
set.seed(5555)
resist_df1 <- data.frame(
resist_bottle = as.factor(rep(1:9, each=3)),
coat_thickness = rnorm(n = 3*9, mean = 10, sd = 2),
raw_material_A_lot = as.ordered(rep(2)),
raw_material_B_lot = as.ordered(rep(1)),
date_run = sample(rep(seq(as.Date('2019/01/01'), as.Date('2019/01/09'), by="day")))
)
head(resist_df1)
resist_df2 <- data.frame(
resist_bottle = as.factor(rep(1:9, each=3)),
coat_thickness = rnorm(n = 3*9, mean = 11, sd = 3),
raw_material_A_lot = as.ordered(rep(2)),
raw_material_B_lot = as.ordered(rep(1)),
date_run = sample(rep(seq(as.Date('2019/01/11'), as.Date('2019/01/19'), by="day")))
)
resist_df3 <- data.frame(
resist_bottle = as.factor(rep(1:9, each=3)),
coat_thickness = rnorm(n = 3*9, mean = 10.5, sd = 1.6),
raw_material_A_lot = as.ordered(rep(3)),
raw_material_B_lot = as.ordered(rep(2)),
date_run = sample(rep(seq(as.Date('2019/01/21'), as.Date('2019/01/29'), by="day")))
)
resist_df <- rbind(resist_df1, resist_df2, resist_df3)
head(resist_df)
```{r}
XbarR <- ggplot(resist_df, aes(x = date_run, y = coat_thickness, group = 1)) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line") +
stat_QC()
XbarR
XbarR + stat_QC_labels()
```
```{r}
library(ggplot2)
set.seed(5555)
resist_df1 <- data.frame(
resist_bottle = as.factor(rep(1:9, each=3)),
coat_thickness = rnorm(n = 3*9, mean = 10, sd = 2),
raw_material_A_lot = as.ordered(rep(2)),
raw_material_B_lot = as.ordered(rep(1)),
date_run = sample(rep(seq(as.Date('2019/01/01'), as.Date('2019/01/09'), by="day")))
)
head(resist_df1)
resist_df2 <- data.frame(
resist_bottle = as.factor(rep(1:9, each=3)),
coat_thickness = rnorm(n = 3*9, mean = 11, sd = 2.5),
raw_material_A_lot = as.ordered(rep(2)),
raw_material_B_lot = as.ordered(rep(1)),
date_run = sample(rep(seq(as.Date('2019/01/11'), as.Date('2019/01/19'), by="day")))
)
resist_df3 <- data.frame(
resist_bottle = as.factor(rep(1:9, each=3)),
coat_thickness = rnorm(n = 3*9, mean = 10.5, sd = 1.6),
raw_material_A_lot = as.ordered(rep(3)),
raw_material_B_lot = as.ordered(rep(2)),
date_run = sample(rep(seq(as.Date('2019/01/21'), as.Date('2019/01/29'), by="day")))
)
resist_df <- rbind(resist_df1, resist_df2, resist_df3)
head(resist_df)
```
```{r}
XbarR <- ggplot(resist_df, aes(x = date_run, y = coat_thickness, group = 1)) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line") +
stat_QC()
XbarR
XbarR + stat_QC_labels()
```
ststat_QC_labels()
view(stat_QC_labels())
library(ggQC)
view(stat_QC_labels())
view(stat_QC_labels)
stat_QC_labels()
View(QC.label)
rowMeans()
rowMeans
methods(QC.label)
methods(stat_QC_labels)
ggQC:::stat_QC_labels
ggQC:::limit.txt.label
getAnywhere(QC.label)
getAnywhere("QC.label")
getAnywhere(limit.txt.label)
getAnywhere(.QC.label)
XbarR + geom_hline(aes(yintercept=14.5)) +
geom_text(aes(0,14.5,label = "USL", vjust = -1))
XbarR + stat_QC_labels()
XbarR + stat_QC_labels()++ geom_hline(aes(yintercept=14.5)) +
geom_text(aes(0,14.5,label = "USL", vjust = -1))
XbarR + stat_QC_labels()+ geom_hline(aes(yintercept=14.5)) +
geom_text(aes(0,14.5,label = "USL", vjust = -1))
XbarR + stat_QC_labels()+ geom_hline(aes(yintercept=14.5))
XbarR + stat_QC_labels()+ geom_hline(aes(yintercept=14.5)) +
geom_text(aes(,14.5,label = "USL", vjust = -1))
XbarR <- ggplot(resist_df, aes(x = date_run, y = coat_thickness, group = 1)) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line") +
stat_QC()
XbarR
XbarR + stat_QC_labels()+ geom_hline(aes(yintercept=14.5)) +
geom_text(aes(x = "2019/01/01",14.5,label = "USL", vjust = -1))
XbarR <- ggplot(resist_df, aes(x = date_run, y = coat_thickness, group = 1)) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line") +
stat_QC()
XbarR
XbarR + stat_QC_labels()+ geom_hline(aes(yintercept=14.5)) +
geom_text(aes(x = as.Date("2019/01/01"),14.5,label = "USL", vjust = -1))
```{r message = FALSE, warning = FALSE, results = FALSE}
t1 <- rnorm(1000,70,10)
t2 <- rnorm(1000,70,13)
t3 <- rnorm(1000,70,25)
print(t2)
t1 <- as.matrix(t1, nrows=1000, ncols=1)
t2 <- as.matrix(t2, nrows=1000, ncols=1)
t3 <- as.matrix(t3, nrows=1000, ncols=1)
t1 <- as.data.frame(t1)
t2 <- as.data.frame(t2)
t3 <- as.data.frame(t3)
colnames(t1) <- "IQ"
colnames(t2) <- "IQ"
colnames(t3) <- "IQ"
dataset <- c(rep(1,1000),rep(2,1000),rep(3,1000))
fullmat <- matrix(0,3000,2)
fullmat[,1] <- dataset
partmat <- rbind(t1,t2,t3)
fullmat[,2] <- partmat[,1]
colnames(fullmat) <- c("dataset","IQ")
fullmat <- as.data.frame(fullmat)
thm <- theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background = element_rect(colour = "#f7fbff", fill = "#f7fbff", size=5),
panel.grid.major =element_blank() ,
panel.grid.minor = element_blank(),
)
logo <- ggplot(fullmat,aes(IQ)) +
geom_density(col = "black",fill = "blue") +
transition_states(dataset,2,4) + shadow_mark(alpha = .3) +
geom_vline(xintercept= 50, linetype = "longdash", size = 1) +
geom_vline(xintercept= 90, linetype = "longdash", size = 1) +
geom_vline(xintercept= 70, linetype = "dotted", size = 0.75) +
thm
library(ggplot2)
library(gganimate)
t1 <- rnorm(1000,70,10)
t2 <- rnorm(1000,70,13)
t3 <- rnorm(1000,70,25)
print(t2)
t1 <- as.matrix(t1, nrows=1000, ncols=1)
t2 <- as.matrix(t2, nrows=1000, ncols=1)
t3 <- as.matrix(t3, nrows=1000, ncols=1)
t1 <- as.data.frame(t1)
t2 <- as.data.frame(t2)
t3 <- as.data.frame(t3)
colnames(t1) <- "IQ"
colnames(t2) <- "IQ"
colnames(t3) <- "IQ"
dataset <- c(rep(1,1000),rep(2,1000),rep(3,1000))
fullmat <- matrix(0,3000,2)
fullmat[,1] <- dataset
partmat <- rbind(t1,t2,t3)
fullmat[,2] <- partmat[,1]
colnames(fullmat) <- c("dataset","IQ")
fullmat <- as.data.frame(fullmat)
thm <- theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background = element_rect(colour = "#f7fbff", fill = "#f7fbff", size=5),
panel.grid.major =element_blank() ,
panel.grid.minor = element_blank(),
)
logo <- ggplot(fullmat,aes(IQ)) +
geom_density(col = "black",fill = "blue") +
transition_states(dataset,2,4) + shadow_mark(alpha = .3) +
geom_vline(xintercept= 50, linetype = "longdash", size = 1) +
geom_vline(xintercept= 90, linetype = "longdash", size = 1) +
geom_vline(xintercept= 70, linetype = "dotted", size = 0.75) +
thm
anim_save("logo.gif", logo)
